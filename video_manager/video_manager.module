<?php
/**
 * Created by PhpStorm.
 * User: hautruong
 * Date: 28/09/2016
 * Time: 11:03
 */

module_load_include('inc', 'video_manager', 'includes/video_manager.helper');

/**
 * Implements hook_permission().
 */
function video_manager_permission() {
  return array(
    'access manage video' => array(
      'title' => t('Access Management Video'),
      'description' => t('Allow user can manage video.'),
    ),
    'access config video' => array(
      'title' => t('Access Config Module Video Manager'),
      'description' => t('Allow user can change config module video manager.'),
    ),
  );
}

/**
 * Implements hook_menu().
 */
function video_manager_menu() {
  $items = array();

  $items['video-manager/video/add'] = array(
    'title' => 'Add video',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('vm_video_add_form'),
    'access arguments' => array('access manage video'),
    'file' => 'includes/video_manager.form.inc',
    'type' => MENU_CALLBACK,
  );

  $items['video-manager/video/import'] = array(
    'title' => 'Import via URL',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('vm_video_import_form'),
    'access arguments' => array('access manage video'),
    'file' => 'includes/video_manager.form.inc',
    'type' => MENU_CALLBACK,
  );

  $items['video-manager/video/import/%'] = array(
    'title' => 'Import via URL',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('vm_video_import_form'),
    'access arguments' => array('access manage video'),
    'file' => 'includes/video_manager.form.inc',
    'type' => MENU_CALLBACK,
  );

  $items['admin/config/TCH/video_manager_setting'] = array(
    'title' => 'Config Setting For Module Video Manager',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('vm_video_manager_setting_form'),
    'access arguments' => array('access manage video'),
    'file' => 'includes/video_manager.admin.form.inc',
    'type' => MENU_CALLBACK,
  );

  return $items;
}

/**
 * Implements hook_entity_info().
 */
function video_manager_entity_info() {
  $entities = array();

  $entities['vm_video_manager_entity'] = array(
    'label' => t('Video Manager Entity'),
    'base table' => 'vm_video_manager',
    'controller class' => 'EntityAPIController',
    'entity class' => 'Entity',
    'fieldable' => TRUE,
    'entity keys' => array(
      'id' => 'id'
    ),
    'module' => 'video_manager',
    'views controller class' => 'VMViewsController',
  );
  return $entities;
}


/**
 * Implements hook_theme().
 */
function video_manager_theme($existing, $type, $theme, $path) {
  return array(
    'vm_block_guideline_import' => array(
      'variables' => array(),
      'template' => 'themes/vm_block_guideline_import'
    ),
  );
}

/**
 * Implements hook_views_api().
 */
function video_manager_views_api() {
  return array(
    'api' => 3,
    'path' => drupal_get_path('module', 'video_manager') . '/includes/views'
  );
}

function video_manager_load_single($id) {
  $entities = entity_load('vm_video_manager_entity', array($id));
  return reset($entities);
}

function video_manager_load_first_by($field_name, $value, $operator = '=') {
  $query = new EntityFieldQuery();
  $query->entityCondition('entity_type', 'vm_video_manager_entity')
    ->propertyCondition($field_name, $value, $operator)
    ->range(0, 1);

  $result = $query->execute();

  if (isset($result['vm_video_manager_entity'])) {
    $ids = array_keys($result['vm_video_manager_entity']);
    return video_manager_load_single($ids[0]);
  }
  return new stdClass();
}